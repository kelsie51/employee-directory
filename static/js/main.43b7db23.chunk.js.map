{"version":3,"sources":["components/EmployeeFields.js","components/EmployeeTable.js","App.js","reportWebVitals.js","index.js"],"names":["EmployeeFields","props","employees","map","employee","src","picture","alt","name","phone","email","EmployeeTable","state","filteredEmployees","sortOrder","getEmployees","a","axios","get","response","setState","data","results","result","thumbnail","first","last","nameFilter","event","searchTerm","target","value","length","filtered","filter","toLowerCase","includes","empSort","_","orderBy","this","for","type","onChange","className","onClick","Component","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"mTAaeA,EAXQ,SAACC,GACtB,OACEA,EAAMC,UAAUC,KAAI,SAAAC,GAAQ,OAAI,+BAC9B,mCAAK,qBAAKC,IAAMD,EAASE,QAASC,IAAK,aAAvC,OACA,6BAAKH,EAASI,OACd,6BAAKJ,EAASK,QACd,6BAAKL,EAASM,e,gBCsFLC,E,4MAvFXC,MAAO,CACHV,UAAU,KACVW,kBAAkB,KAClBC,UAAU,O,EAGdC,a,sBAAe,4BAAAC,EAAA,sEACYC,IAAMC,IAAI,sEADtB,OACLC,EADK,OAEX,EAAKC,SAAS,CACVlB,UAAWiB,EAASE,KAAKC,QACpBnB,KAAI,SAAAoB,GACD,MAAO,CACHjB,QAASiB,EAAOjB,QAAQkB,UACxBhB,KAAK,GAAD,OAAKe,EAAOf,KAAKiB,MAAjB,YAA0BF,EAAOf,KAAKkB,MAC1CjB,MAAOc,EAAOd,MACdC,MAAOa,EAAOb,YATnB,2C,EAkBfiB,WAAa,SAAAC,GACT,IAAMC,EAAYD,EAAME,OAAOC,MAC/B,GAAKF,EAAWG,OAEP,CAEL,IAAMC,EAAW,EAAKrB,MAAMV,UAAUgC,QAAO,SAAA9B,GAAQ,OAAIA,EAASI,KAAK2B,cAAcC,SAASP,MAE9F,EAAKT,SAAU,CAACP,kBAAmBoB,SALnC,EAAKb,SAAU,CAACP,kBAAmB,EAAKD,MAAMV,a,EAStDmC,QAAU,WAC8B,OAAjC,EAAKzB,MAAMC,kBACV,EAAKO,SAAS,CACVP,kBAAkByB,IAAEC,QAAS,EAAK3B,MAAMC,kBAAoB,CAAC,QAAS,CAAC,EAAKD,MAAME,YAClFA,UAAoC,QAAzB,EAAKF,MAAME,UAAsB,OAAS,QAKzD,EAAKM,SAAS,CACVlB,UAAUoC,IAAEC,QAAS,EAAK3B,MAAMV,UAAY,CAAC,QAAS,CAAC,EAAKU,MAAME,YAClEA,UAAoC,QAAzB,EAAKF,MAAME,UAAsB,OAAS,S,uDA1BjE,WACI0B,KAAKzB,iB,oBAiCT,WAEI,OACI,gCACI,gCACI,uBAAO0B,IAAI,SAAX,yCACA,uBAAOC,KAAK,OAAOC,SAAUH,KAAKb,aAFtC,IAEoD,uBAChD,0BAGJ,kCACI,gCACI,+BACI,uCACA,mCAAK,wBAAQiB,UAAU,OAAOC,QAASL,KAAKH,QAAvC,qCAEL,uCACA,4CAIR,gCACMG,KAAK5B,MAAMV,WAAasC,KAAK5B,MAAMC,kBACpC,cAAC,EAAD,CAAgBX,UAAWsC,KAAK5B,MAAMC,mBAAqB2B,KAAK5B,MAAMV,YACrE,6BAAI,uD,GAjFF4C,aCObC,MATf,WACE,OACE,qBAAKH,UAAU,MAAf,SAEE,cAAC,EAAD,OCKSI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.43b7db23.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nconst EmployeeFields = (props) => {\r\n  return (\r\n    props.employees.map(employee => <tr>\r\n      <td> <img src ={employee.picture} alt= \"Employee\"/> </td>\r\n      <td>{employee.name}</td>     \r\n      <td>{employee.phone}</td>\r\n      <td>{employee.email}</td>\r\n    </tr>)\r\n    );\r\n};\r\n\r\nexport default EmployeeFields;","import React, { Component } from \"react\";\r\nimport axios from \"axios\"\r\nimport EmployeeFields from \"./EmployeeFields\"\r\nimport _ from 'lodash'\r\n\r\nclass EmployeeTable extends Component{\r\n\r\n    state= {\r\n        employees:null,\r\n        filteredEmployees:null,\r\n        sortOrder:'asc'\r\n    }\r\n    \r\n    getEmployees = async () => {\r\n        const response = await axios.get('https://randomuser.me/api/?results=50&inc=picture,name,phone,email');\r\n        this.setState({\r\n            employees: response.data.results\r\n                .map(result => {\r\n                    return {\r\n                        picture: result.picture.thumbnail,\r\n                        name: `${result.name.first} ${result.name.last}`,\r\n                        phone: result.phone,\r\n                        email: result.email\r\n                    };\r\n                })\r\n        });\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.getEmployees();\r\n    }\r\n    nameFilter = event =>{\r\n        const searchTerm= event.target.value\r\n        if( !searchTerm.length ){\r\n            this.setState( {filteredEmployees: this.state.employees })\r\n          } else {\r\n           \r\n            const filtered = this.state.employees.filter(employee => employee.name.toLowerCase().includes(searchTerm))\r\n            \r\n            this.setState( {filteredEmployees: filtered })\r\n          }       \r\n    }\r\n\r\n    empSort = () => {\r\n        if(this.state.filteredEmployees !== null){\r\n            this.setState({//https://www.geeksforgeeks.org/lodash-_-orderby-method/\r\n                filteredEmployees:_.orderBy((this.state.filteredEmployees), ['name'], [this.state.sortOrder]),\r\n                sortOrder: this.state.sortOrder === \"asc\" ? \"desc\" : \"asc\"\r\n                \r\n            }\r\n        )\r\n        } else {\r\n            this.setState({//https://www.geeksforgeeks.org/lodash-_-orderby-method/\r\n                employees:_.orderBy((this.state.employees), ['name'], [this.state.sortOrder]),\r\n                sortOrder: this.state.sortOrder === \"asc\" ? \"desc\" : \"asc\"\r\n            }\r\n        )\r\n        }        \r\n    }\r\n\r\n   \r\n\r\n    render(){\r\n        \r\n        return(\r\n            <div>\r\n                <div >\r\n                    <label for=\"search\"> Search First or Last Name </label>\r\n                    <input type=\"text\" onChange={this.nameFilter}/> <br/>\r\n                    <br/>\r\n                </div>\r\n           \r\n                <table >\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Image</th>\r\n                            <th> <button className=\"sort\" onClick={this.empSort}>Name (click to sort)</button>\r\n                            </th>\r\n                            <th>Phone</th>\r\n                            <th>Email</th>\r\n                           \r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {(this.state.employees || this.state.filteredEmployees) ?\r\n                         <EmployeeFields employees={this.state.filteredEmployees || this.state.employees} />\r\n                        : <tr><td>No data</td></tr>}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default EmployeeTable;","import './App.css';\r\nimport EmployeeTable from \"./components/EmployeeTable\"\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n  \r\n      <EmployeeTable />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}